'use strict'
const gulp = require('gulp')
const mergeStream = require('merge-stream')

const { webpack, moveResources, sass, vendor, clean } = require('kth-node-build-commons').tasks

const globals = {
  dirname: __dirname
}

/**
 * Usage:
 *
 *  One-time build of browser dependencies for development
 *
 *    $ gulp build:dev [--production | --development]
 *
 *  Deployment build
 *
 *    $ gulp build
 *
 *  Continuous re-build during development
 *
 *    $ gulp watch
 *
 *  Remove the generated files
 *
 *    $ gulp clean
 *
 */

// *** Deployment tasks ***
gulp.task('webpackDeploy', function () {
  // Returning merged streams at the end so Gulp knows when async operations have finished
  return mergeStream(
    webpack(globals, 'reference')(),
    webpack(globals, 'production')()
  )
})

gulp.task('vendorDeploy', function () {
  // Returning merged streams at the end so Gulp knows when async operations have finished
  return mergeStream(
    vendor('reference')(),
    vendor('production')()
  )
})

// *** Development tasks ***
gulp.task('webpack', webpack(globals))
gulp.task('vendor', vendor())

gulp.task('moveResources', function () {
  // Returning merged streams at the end so Gulp knows when async operations have finished
  moveResources.cleanKthStyle()

  return mergeStream(
    moveResources.moveKthStyle(),
    moveResources.moveBootstrap(),
    moveResources.moveFontAwesome(),
    // Move project image files
    gulp.src('./public/img/*')
      .pipe(gulp.dest('dist/img'))
  )
})

gulp.task('transpileSass', function () {
  return sass(globals)
})

/* Put any addintional helper tasks here */

/**
 *
 *  Public tasks used by developer:
 *
 */

gulp.task('clean', clean)

gulp.task('build:dev', ['moveResources', 'vendor', 'webpack'], function () {
  // Passing globals so we get the correct __dirname path to find node_modules
  return sass(globals)
})

gulp.task('build', ['moveResources', 'vendorDeploy', 'webpackDeploy'], function () {
  // Passing globals so we get the correct __dirname path to find node_modules
  return sass(globals)
})

gulp.task('watch', ['build:dev'], function () {
  gulp.watch(['./public/js/app/**/*.js', './public/js/components/**/*'], ['webpack'])
  gulp.watch(['./public/js/vendor.js'], ['vendor'])
  gulp.watch(['./public/css/**/*.scss'], ['transpileSass'])
})
